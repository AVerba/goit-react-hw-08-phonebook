{"version":3,"file":"static/js/297.3ce22a78.chunk.js","mappings":"0LACA,MAA0F,oCAA1F,EAAqI,2BAArI,EAAgL,oC,kGCKhL,EAFc,CAAEA,UAJE,yHAISC,YAFzB,sH,oBCDF,EAA8B,iC,SCgBjBC,EAAc,YACRC,EAAAA,EAAAA,MAATC,KAAR,IACA,GACEC,EAAAA,EAAAA,MADF,eAAOC,EAAP,YAAgCC,EAAhC,EAAqBC,UAAkCC,EAAvD,EAA4CC,UAO5C,GAA0CC,EAAAA,EAAAA,UALxB,CAChBC,KAAM,GACNC,OAAQ,KAGV,eAAOC,EAAP,KACMC,GADN,KACyBC,EAAAA,KAAaC,MAAM,CAC1CL,KAAMI,EAAAA,KACHE,SAAS,oBACTC,IAAI,EAAG,sCACPC,IAAI,GAAI,sCACRC,QACCC,EAAAA,UACA,8DAEJT,OAAQG,EAAAA,KAAaK,QACnBC,EAAAA,YACA,gEAGJ,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,YACNC,eAAgB,WAChBC,cAAeZ,EACfa,UAAUC,EAAAA,EAAAA,GAAYb,KARtBc,EADF,EACEA,SACAC,EAFF,EAEEA,WACAC,EAHF,EAGEA,aACaC,EAJf,EAIEC,UAAaD,OAyCf,OACE,gBAAKE,UAAWC,EAAhB,UACE,UAACC,EAAA,EAAD,CAAMC,SAAUN,GAhCH,SAAC3B,EAAMkC,GACtBA,EAAEC,iBACF,IAAQ3B,EAAiBR,EAAjBQ,KAAMC,EAAWT,EAAXS,OACdyB,EAAEC,iBAEF,IAAMC,EAAU,CACdC,GAAIC,IAAAA,WACJ9B,KAAAA,EACAC,OAAAA,GAEEJ,GACFkC,EAAAA,OAAAA,QAAA,kBAA0BvC,EAAKQ,KAA/B,wBAEFN,EAAWkC,GAhBXV,EAAW,QACXA,EAAW,UAiBXc,QAAQC,IAAIzC,MAEE,SAAA0C,GACdF,QAAQC,IAAI,WAAYC,MActB,WACE,UAACV,EAAA,QAAD,CAAYF,UAAU,OAAOa,UAAU,gBAAvC,WACE,SAACX,EAAA,QAAD,4BACA,SAACA,EAAA,WAAD,QACEY,KAAK,OACLC,YAAY,sBACRpB,EAAS,UAEdG,EAAOpB,OACN,SAACwB,EAAA,OAAD,CAAWF,UAAU,cAArB,SAAoCF,EAAOpB,KAAKsC,cAIpD,UAACd,EAAA,QAAD,CAAYF,UAAU,OAAOa,UAAU,uBAAvC,WACE,SAACX,EAAA,QAAD,4BACA,SAACA,EAAA,WAAD,QACEY,KAAK,OACLC,YAAY,8BACRpB,EAAS,YAEdG,EAAOnB,SACN,SAACuB,EAAA,OAAD,CAAWF,UAAU,cAArB,SACGF,EAAOnB,OAAOqC,cAIrB,SAACC,EAAA,EAAD,CACEC,QAAQ,UACRJ,KAAK,SACLK,SAAUrB,EAAOnB,QAAUmB,EAAOpB,KAHpC,SAKGL,GAAa,6CAAiB,sDCtHzC,EAA4B,6B,mBCGf+C,EAAY,SAAC,GAA6B,IAA3BpB,EAA0B,EAA1BA,UAAWqB,EAAe,EAAfA,SAC/BC,EAAYC,GAAAA,CAAGtB,EAAkBD,GACvC,OAAO,gBAAKA,UAAWsB,EAAhB,SAA4BD,KCLrC,GAAgB,SAAW,+BAA+B,KAAO,4B,oBCYpDG,EAAc,WACzB,OAAsCvD,EAAAA,EAAAA,MAAxBwD,EAAd,EAAQvD,KAAgBI,EAAxB,EAAwBA,UACxB,GAAmDoD,EAAAA,EAAAA,MAAnD,eAAOC,EAAP,KAAmCC,EAAnC,KAAwBtD,UAgBpBuD,EAA+BJ,EAC7BK,GACJ,SAACC,EAAA,EAAD,CAAW/B,UAAWC,EAAAA,aAAtB,SACGwB,GACCI,EAAaG,KAAI,gBAAGtD,EAAH,EAAGA,KAAM6B,EAAT,EAASA,GAAI5B,EAAb,EAAaA,OAAb,OACf,UAACoD,EAAA,OAAD,CAAgB/B,UAAWC,EAAAA,SAA0BM,GAAIA,EAAzD,WACE,iBAAKP,UAAWC,EAAAA,KAAhB,WACE,kBAAMD,UAAWC,EAAAA,YAAjB,UAAsCvB,EAAtC,SACA,iBAAMsB,UAAWC,EAAAA,YAAjB,SAAsCtB,QAExC,SAACsC,EAAA,EAAD,CACEC,QAAQ,UACRJ,KAAK,SACLmB,QAAS,SAAAC,GAAK,OA1BP,SAAAA,GACjBP,EAAcO,EAAMC,cAAcC,WAAW7B,IAExCqB,IACHM,EAAMC,cAAcE,UAAY,gBAsBNC,CAAWJ,IAH/B,8BAL+C3B,QAiBzD,OAAOjC,GACL,wCACsB,IAApBmD,EAASc,OACXT,EAEA,wBCpCJ,EAhBqB,WACnB,OACE,SAACV,EAAD,WACE,gBAAIpB,UAAWC,EAAf,WACE,gBAAID,UAAWC,EAAf,WACE,eAAID,UAAWC,EAAf,gCACA,SAACjC,EAAD,QAEF,gBAAIgC,UAAWC,EAAf,WACE,eAAID,UAAWC,EAAf,uBACA,SAACuB,EAAD","sources":["webpack://goit-react-hw-08-phonebook/./src/views/ContactsView/ContactsView.module.css?919f","components/RegEx/RegEx.js","webpack://goit-react-hw-08-phonebook/./src/components/Forms/ContactForm/ContactForm.module.css?983c","components/Forms/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","views/ContactsView/ContactsView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactContainer\":\"ContactsView_contactContainer__e8eeD\",\"contactscVies\":\"ContactsView_contactscVies__pEVSb\",\"item\":\"ContactsView_item__Aff2J\",\"contactsTitle\":\"ContactsView_contactsTitle__+M+J9\"};","const nameRegex = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nconst phoneRegExp =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|[(\\+\\(\\))]|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nconst regEx = { nameRegex, phoneRegExp };\n\nexport default regEx;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__FkOKX\"};","import { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport shortid from 'shortid';\nimport { yupResolver } from '@hookform/resolvers/yup/dist/yup';\n\nimport * as Yup from 'yup';\nimport {\n  useCreateContactMutation,\n  useGetContactsQuery,\n} from '../../../redux/contacts/contactsApi';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport regEx from '../../RegEx/RegEx';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport styles from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const { data } = useGetContactsQuery();\n  const [addContact, { isLoading: isUpdating, isSuccess: successfullyAdded }] =\n    useCreateContactMutation();\n  const initState = {\n    name: '',\n    number: '',\n  };\n\n  const [initialValues, setInitialValues] = useState(initState);\n  const validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required')\n      .min(6, 'Name must be at least 6 characters')\n      .max(20, 'Name must not exceed 20 characters')\n      .matches(\n        regEx.nameRegex,\n        'Name is not valid its should contain only alphabet letters'\n      ),\n    number: Yup.string().matches(\n      regEx.phoneRegExp,\n      'Phone number is not valid its should contain only numbers'\n    ),\n  });\n  const {\n    register,\n    resetField,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    mode: 'onTouched',\n    reValidateMode: 'onChange',\n    defaultValues: initialValues,\n    resolver: yupResolver(validationSchema),\n  });\n  const resetAllFields = () => {\n    resetField('name');\n    resetField('number');\n  };\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    const { name, number } = data;\n    e.preventDefault();\n\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    if (successfullyAdded) {\n      Notify.success(`Contact ${data.name} added successfully`);\n    }\n    addContact(contact);\n    resetAllFields();\n    console.log(data);\n  };\n  const onError = error => {\n    console.log('ERROR:::', error);\n  };\n  const disabledStatus = (numberError, nameError) => {\n    if (numberError && !nameError) {\n      return Notify.failure('Please enter contact name');\n    }\n    if (!nameError && nameError) {\n      return Notify.failure('Please enter contact phone number');\n    }\n    return false;\n  };\n\n  return (\n    <div className={styles.contactForm}>\n      <Form onSubmit={handleSubmit(onSubmit, onError)}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n          <Form.Label>Contact name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter contact name\"\n            {...register('name')}\n          />\n          {errors.name && (\n            <Form.Text className=\"text-danger\">{errors.name.message}</Form.Text>\n          )}\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPhoneNumber\">\n          <Form.Label>Phone number</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter contact phohe number\"\n            {...register('number')}\n          />\n          {errors.number && (\n            <Form.Text className=\"text-danger\">\n              {errors.number.message}\n            </Form.Text>\n          )}\n        </Form.Group>\n        <Button\n          variant=\"primary\"\n          type=\"submit\"\n          disabled={errors.number || errors.name}\n        >\n          {isUpdating ? <>Adding...</> : <>Add contact</>}\n        </Button>\n      </Form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__8322i\"};","import styles from './Container.module.css';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nexport const Container = ({ className, children }) => {\n  const classList = cx(styles.container, className);\n  return <div className={classList}>{children}</div>;\n};\n\nContainer.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"ContactsList_listItem__Elj+5\",\"info\":\"ContactsList_info__hjGaA\"};","import styles from './ContactsList.module.css';\nimport { ContactsItem } from './ContactItem';\n\nimport { useSelector } from 'react-redux';\nimport {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n} from '../../redux/contacts/contactsApi';\nimport { contactsSelectors } from '../../redux/contacts/contactsSelectors';\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { ListGroup } from 'react-bootstrap';\n\nexport const ContactList = () => {\n  const { data: contacts, isLoading } = useGetContactsQuery();\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  // const { filter } = useSelector(contactsSelectors.getFilter);\n  const filter = '';\n  const deleteItem = event => {\n    deleteContact(event.currentTarget.parentNode.id);\n\n    if (!isDeleting) {\n      event.currentTarget.innerHTML = 'Deleting ...';\n    }\n  };\n\n  const filteredContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  let renderedData = filter === '' ? contacts : filteredContacts();\n  const renderList = (\n    <ListGroup className={styles.contactsList}>\n      {contacts &&\n        renderedData.map(({ name, id, number }) => (\n          <ListGroup.Item className={styles.listItem} key={id} id={id}>\n            <div className={styles.info}>\n              <span className={styles.contactName}>{name}: </span>\n              <span className={styles.phoneNumber}>{number}</span>\n            </div>\n            <Button\n              variant=\"primary\"\n              type=\"button\"\n              onClick={event => deleteItem(event)}\n            >\n              Delete contact\n            </Button>\n          </ListGroup.Item>\n        ))}\n    </ListGroup>\n  );\n\n  return isLoading ? (\n    <div>loading...</div>\n  ) : contacts.length !== 0 ? (\n    renderList\n  ) : (\n    'You have no contacts'\n  );\n};\n","import styles from './ContactsView.module.css';\n\nimport { ContactForm } from '../../components/Forms/ContactForm';\nimport { Container } from '../../components/Container/Container';\nimport { ContactList } from '../../components/ContactsList';\n\nconst ContactsView = () => {\n  return (\n    <Container>\n      <ul className={styles.contactscVies}>\n        <li className={styles.item}>\n          <h4 className={styles.contactsTitle}>Add contacts info</h4>\n          <ContactForm />\n        </li>\n        <li className={styles.item}>\n          <h4 className={styles.contactsTitle}>Contacts</h4>\n          <ContactList />\n        </li>\n      </ul>\n    </Container>\n  );\n};\nexport default ContactsView;\n"],"names":["nameRegex","phoneRegExp","ContactForm","useGetContactsQuery","data","useCreateContactMutation","addContact","isUpdating","isLoading","successfullyAdded","isSuccess","useState","name","number","initialValues","validationSchema","Yup","shape","required","min","max","matches","regEx","useForm","mode","reValidateMode","defaultValues","resolver","yupResolver","register","resetField","handleSubmit","errors","formState","className","styles","Form","onSubmit","e","preventDefault","contact","id","shortid","Notify","console","log","error","controlId","type","placeholder","message","Button","variant","disabled","Container","children","classList","cx","ContactList","contacts","useDeleteContactMutation","deleteContact","isDeleting","renderedData","renderList","ListGroup","map","onClick","event","currentTarget","parentNode","innerHTML","deleteItem","length"],"sourceRoot":""}